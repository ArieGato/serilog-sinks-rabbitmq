name: CI build

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - '**'        # matches every branch
      - '!master'   # excludes master

env:
  Configuration: Release

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: bitnami/rabbitmq:latest
        ports:
          - 5672:5672
        env:
          RABBITMQ_USERNAME: serilog
          RABBITMQ_PASSWORD: serilog
          RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS: true

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Determine new version
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0
      with:
        useConfigFile: true
        configFilePath: gitversion.yml

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore -c ${{ env.Configuration }} /p:Version=${{ steps.gitversion.outputs.FullSemVer }}

    - name: Run tests
      run: dotnet test --no-build -c ${{ env.Configuration }} -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput=out/.coverage/

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: out/.coverage/*.opencover.xml
        token: ${{ secrets.CODECOV_TOKEN }} # required

    - name: Create nuget packages
      run: dotnet pack --no-build -c ${{ env.Configuration }} -o dist/packages /p:PackageVersion=${{ steps.gitversion.outputs.FullSemVer }}
